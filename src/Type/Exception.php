<?php

declare(strict_types=1);

namespace Cassandra\Type;

use Cassandra\Exception as CassandraException;

final class Exception extends CassandraException {
    public const CODE_BIGINT_64BIT_REQUIRED = 1302;
    public const CODE_BIGINT_INVALID_VALUE_TYPE = 1403;
    public const CODE_BIGINT_UNPACK_FAILED = 1002;
    public const CODE_BLOB_INVALID_VALUE_TYPE = 1432;
    public const CODE_BOOLEAN_INVALID_VALUE_TYPE = 1431;
    public const CODE_COLLECTION_LIST_INVALID_TYPEINFO = 1112;
    public const CODE_COLLECTION_LIST_INVALID_VALUE_TYPE = 1430;
    public const CODE_COLLECTION_LIST_TYPEINFO_REQUIRED = 1111;
    public const CODE_COLLECTION_LIST_VALUEDEF_OR_TYPEINFO_REQUIRED = 1205;
    public const CODE_COLLECTION_MAP_INVALID_TYPEINFO = 1110;
    public const CODE_COLLECTION_MAP_INVALID_VALUE_TYPE = 1429;
    public const CODE_COLLECTION_MAP_KEY_VALUEDEF_OR_TYPEINFO_REQUIRED = 1204;
    public const CODE_COLLECTION_MAP_TYPEINFO_REQUIRED = 1109;
    public const CODE_COLLECTION_SET_INVALID_TYPEINFO = 1108;
    public const CODE_COLLECTION_SET_INVALID_VALUE_TYPE = 1428;
    public const CODE_COLLECTION_SET_TYPEINFO_REQUIRED = 1107;
    public const CODE_COLLECTION_SET_VALUEDEF_OR_TYPEINFO_REQUIRED = 1203;
    public const CODE_CUSTOM_INVALID_TYPEINFO = 1106;
    public const CODE_CUSTOM_INVALID_VALUE_TYPE = 1427;
    public const CODE_CUSTOM_TYPEINFO_REQUIRED = 1105;
    public const CODE_CUSTOM_UNPACK_FAILED = 1010;
    public const CODE_DATE_INVALID_VALUE_TYPE = 1426;
    public const CODE_DECIMAL_INVALID_VALUE_TYPE = 1424;
    public const CODE_DECIMAL_NON_NUMERIC_STRING = 1425;
    public const CODE_DECIMAL_UNPACK_FAILED = 1009;
    public const CODE_DOUBLE_INVALID_VALUE_TYPE = 1423;
    public const CODE_DOUBLE_UNPACK_FAILED = 1008;

    // 64-bit requirements
    public const CODE_DURATION_64BIT_REQUIRED = 1301;
    public const CODE_DURATION_DAYS_INVALID = 1503;
    public const CODE_DURATION_DAYS_OUT_OF_RANGE = 1506;

    // Duration validation details
    public const CODE_DURATION_INVALID_VALUE_TYPE = 1501;
    public const CODE_DURATION_MONTHS_INVALID = 1502;
    public const CODE_DURATION_MONTHS_OUT_OF_RANGE = 1505;
    public const CODE_DURATION_NANOSECONDS_INVALID = 1504;
    public const CODE_DURATION_SIGN_MISMATCH = 1507;
    public const CODE_DURATION_TO_DATEINTERVAL_FAILED = 1509;
    public const CODE_DURATION_UNPACK_FAILED = 1011;
    public const CODE_DURATION_VINT_INVALID_DATA = 1508;
    public const CODE_FLOAT32_INVALID_VALUE_TYPE = 1422;
    public const CODE_FLOAT32_UNPACK_FAILED = 1007;
    public const CODE_INET_INVALID_VALUE_TYPE = 1419;
    public const CODE_INET_TO_BINARY_FAILED = 1421;
    public const CODE_INET_TO_STRING_FAILED = 1420;

    // Invalid value type/details
    public const CODE_INTEGER_INVALID_VALUE_TYPE = 1401;
    public const CODE_INTEGER_OUT_OF_RANGE = 1402;
    // General/unpack failures
    public const CODE_INTEGER_UNPACK_FAILED = 1001;
    public const CODE_SMALLINT_INVALID_VALUE_TYPE = 1417;
    public const CODE_SMALLINT_OUT_OF_RANGE = 1418;
    public const CODE_SMALLINT_UNPACK_FAILED = 1006;
    public const CODE_TIME_64BIT_REQUIRED = 1303; // uses Bigint base
    public const CODE_TIME_INVALID_FORMAT = 1414;
    public const CODE_TIME_INVALID_STRING = 1415;
    public const CODE_TIME_INVALID_VALUE_TYPE = 1413;
    public const CODE_TIME_OUT_OF_RANGE = 1416;

    // Conversions
    public const CODE_TIME_TO_DATEINTERVAL_FAILED = 1601;
    public const CODE_TIMESTAMP_64BIT_REQUIRED = 1304; // uses Bigint base
    public const CODE_TIMESTAMP_INVALID_VALUE_TYPE = 1412;
    public const CODE_TIMESTAMP_TO_DATETIME_FAILED = 1602;
    public const CODE_TINYINT_INVALID_VALUE_TYPE = 1410;
    public const CODE_TINYINT_OUT_OF_RANGE = 1411;
    public const CODE_TINYINT_UNPACK_FAILED = 1005;
    public const CODE_TUPLE_INVALID_TYPEINFO = 1104;
    public const CODE_TUPLE_INVALID_VALUE_TYPE = 1409;
    public const CODE_TUPLE_TYPEINFO_REQUIRED = 1103;
    public const CODE_TUPLE_VALUEDEF_OR_TYPEINFO_REQUIRED = 1202;

    /**
     * TypeFactory errors: 1160-1169
     */
    public const CODE_TYPEFACTORY_CANNOT_GET_TYPE_OBJECT_FOR_VALUE = 1160;
    public const CODE_TYPEFACTORY_CLASS_UNKNOWN_DATA_TYPE = 1165;
    public const CODE_TYPEFACTORY_COMPLEX_TYPEINFO_REQUIRED = 1162;
    public const CODE_TYPEFACTORY_TYPE_CLASS_NOT_SUBCLASS = 1166;
    public const CODE_TYPEFACTORY_TYPEDEF_MISSING_TYPE = 1163;
    public const CODE_TYPEFACTORY_TYPEDEF_TYPE_NOT_INSTANCE = 1164;
    public const CODE_TYPEFACTORY_UNKNOWN_DATA_TYPE = 1161;
    public const CODE_UDT_INVALID_TYPEINFO = 1102;
    public const CODE_UDT_INVALID_VALUE_TYPE = 1408;

    // Invalid/missing type info
    public const CODE_UDT_TYPEINFO_REQUIRED = 1101;

    // Construction requirement errors
    public const CODE_UDT_VALUEDEF_OR_TYPEINFO_REQUIRED = 1201;
    public const CODE_UUID_INVALID_VALUE_TYPE = 1404;
    public const CODE_UUID_UNPACK_FAILED = 1003;
    public const CODE_VARCHAR_INVALID_VALUE_TYPE = 1405;
    public const CODE_VARINT_INVALID_VALUE_TYPE = 1406;
    public const CODE_VARINT_OUT_OF_PHP_INT_RANGE = 1407;
    public const CODE_VARINT_UNPACK_FAILED = 1004;
}
